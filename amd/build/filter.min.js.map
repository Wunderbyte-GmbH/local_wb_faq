{"version":3,"file":"filter.min.js","sources":["../src/filter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/*\r\n * @package    local_wunderbyte_table\r\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\r\nvar allPlayers = Array.from(document.querySelectorAll(\".list-group-item\"));\r\nvar checked = {};\r\nvar categories = [];\r\n/**\r\n * Initial function\r\n * @param {string} filtercontainer\r\n * @param {string} singledatacontainer\r\n */\r\nexport const init = (filtercontainer, singledatacontainer) => {\r\n  var allCheckboxes = document.querySelectorAll(\"input[type=checkbox]\");\r\n\r\n  document.querySelectorAll(\".form-group\").forEach(function (e) {\r\n    categories.push(e.getAttribute(\"name\"));\r\n    getChecked(e.getAttribute(\"name\"));\r\n  });\r\n\r\n  Array.prototype.forEach.call(allCheckboxes, function (el) {\r\n    el.addEventListener(\"change\", toggleCheckbox);\r\n  });\r\n};\r\n\r\n/**\r\n * Eventhandler\r\n *\r\n * @param {*} e - event\r\n */\r\nexport const toggleCheckbox = (e) => {\r\n  getChecked(e.target.name);\r\n  setVisibility();\r\n};\r\n\r\n/**\r\n * Check which Checkboxes are selected inside a group.\r\n *\r\n * @param {*} name of Element group\r\n */\r\nexport const getChecked = (name) => {\r\n  checked[name] = Array.from(\r\n    document.querySelectorAll(\"input[name=\" + name + \"]:checked\")\r\n  ).map(function (el) {\r\n    return el.value;\r\n  });\r\n};\r\n\r\n/**\r\n * Compares checked boxes with classes of Elements and shows or hides them.\r\n */\r\nexport const setVisibility = () => {\r\n  /* eslint-disable no-console */\r\n  console.log(categories);\r\n  allPlayers.forEach(function (el) {\r\n    let display = true;\r\n    categories.forEach(function (c) {\r\n      /* eslint-disable no-console */\r\n      console.log(el.classList);\r\n      let intersection = checked[c].length\r\n        ? Array.from(Object.values(el.dataset)).filter((x) =>\r\n            checked[c].includes(x)\r\n          ).length\r\n        : true;\r\n      if (!intersection) {\r\n        display = false;\r\n        return;\r\n      }\r\n    });\r\n    if (display) {\r\n      el.style.display = \"block\";\r\n    } else {\r\n      el.style.display = \"none\";\r\n    }\r\n  });\r\n};\r\n"],"names":["allPlayers","Array","from","document","querySelectorAll","checked","categories","filtercontainer","singledatacontainer","allCheckboxes","forEach","e","push","getAttribute","getChecked","prototype","call","el","addEventListener","toggleCheckbox","target","name","setVisibility","map","value","console","log","display","c","classList","length","Object","values","dataset","filter","x","includes","style"],"mappings":";;;;;;IAsBIA,WAAaC,MAAMC,KAAKC,SAASC,iBAAiB,qBAClDC,QAAU,GACVC,WAAa,iBAMG,CAACC,gBAAiBC,2BAChCC,cAAgBN,SAASC,iBAAiB,wBAE9CD,SAASC,iBAAiB,eAAeM,SAAQ,SAAUC,GACzDL,WAAWM,KAAKD,EAAEE,aAAa,SAC/BC,WAAWH,EAAEE,aAAa,YAG5BZ,MAAMc,UAAUL,QAAQM,KAAKP,eAAe,SAAUQ,IACpDA,GAAGC,iBAAiB,SAAUC,0BASrBA,eAAkBR,IAC7BG,WAAWH,EAAES,OAAOC,MACpBC,8DAQWR,WAAcO,OACzBhB,QAAQgB,MAAQpB,MAAMC,KACpBC,SAASC,iBAAiB,cAAgBiB,KAAO,cACjDE,KAAI,SAAUN,WACPA,GAAGO,+CAODF,cAAgB,KAE3BG,QAAQC,IAAIpB,YACZN,WAAWU,SAAQ,SAAUO,QACvBU,SAAU,EACdrB,WAAWI,SAAQ,SAAUkB,GAE3BH,QAAQC,IAAIT,GAAGY,YACIxB,QAAQuB,GAAGE,QAC1B7B,MAAMC,KAAK6B,OAAOC,OAAOf,GAAGgB,UAAUC,QAAQC,GAC5C9B,QAAQuB,GAAGQ,SAASD,KACpBL,SAGJH,SAAU,MAKZV,GAAGoB,MAAMV,QADPA,QACiB,QAEA"}