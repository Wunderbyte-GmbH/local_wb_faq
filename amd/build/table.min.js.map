{"version":3,"file":"table.min.js","sources":["../src/table.js"],"sourcesContent":["\r\n// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/*\r\n * @package    local_wb_faq\r\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n *\r\n * @param {*} tableSelector\r\n */\r\nexport const init = (tableSelector) => {\r\n\r\ndocument.querySelectorAll('#' + tableSelector + ' th').forEach(th => th.addEventListener('click', (() => {\r\n    const table = th.closest('table');\r\n    const tbody = table.querySelector('tbody');\r\n    Array.from(tbody.querySelectorAll('tr'))\r\n        .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))\r\n        .forEach(tr => tbody.appendChild(tr) );\r\n    })));\r\n    const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;\r\n\r\n    const comparer = (idx, asc) => (a, b) => ((v1, v2) =>\r\n    v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)\r\n    )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));\r\n};\r\n"],"names":["tableSelector","document","querySelectorAll","forEach","th","addEventListener","tbody","closest","querySelector","Array","from","sort","comparer","parentNode","children","indexOf","asc","tr","appendChild","getCellValue","idx","innerText","textContent","a","b","v1","v2","isNaN","toString","localeCompare"],"mappings":"uJA0BqBA,gBAErBC,SAASC,iBAAiB,IAAMF,cAAgB,OAAOG,SAAQC,IAAMA,GAAGC,iBAAiB,SAAU,WAEzFC,MADQF,GAAGG,QAAQ,SACLC,cAAc,SAClCC,MAAMC,KAAKJ,MAAMJ,iBAAiB,OAC7BS,KAAKC,SAASH,MAAMC,KAAKN,GAAGS,WAAWC,UAAUC,QAAQX,UAAK,GAAKY,WAAO,GAAKA,MAC/Eb,SAAQc,IAAMX,MAAMY,YAAYD,iBAE/BE,aAAe,CAACF,GAAIG,MAAQH,GAAGH,SAASM,KAAKC,WAAaJ,GAAGH,SAASM,KAAKE,YAE3EV,SAAW,CAACQ,IAAKJ,MAAQ,CAACO,EAAGC,KAAM,OAAEC,GAEzCN,aAAaH,IAAMO,EAAIC,EAAGJ,KAFmBM,GAEbP,aAAaH,IAAMQ,EAAID,EAAGH,KADrD,KAAPK,IAAoB,KAAPC,IAAcC,MAAMF,KAAQE,MAAMD,IAAgBD,GAAGG,WAAWC,cAAcH,IAAtCD,GAAKC,GADjB,IAAED,GAAIC"}