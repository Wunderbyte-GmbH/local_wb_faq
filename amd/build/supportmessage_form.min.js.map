{"version":3,"file":"supportmessage_form.min.js","sources":["../src/supportmessage_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wb_faq\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport {showErrorNotification} from 'local_wb_faq/notifications';\n\nconst SELECTORS = {\n    SUPPORTMESSAGEFORM: \"[data-id='supportmessage-form']\",\n    CREATETICKETBUTTON: \"input.wb-faq-create-ticket-button\",\n};\n\n/**\n * Initialize the form with event listener that update url params.\n */\nexport const init = () => {\n\n    const elements = document.querySelectorAll(SELECTORS.SUPPORTMESSAGEFORM);\n\n    elements.forEach(element => {\n        listenToSelect(element);\n    });\n};\n\n/**\n * Set an eventlistener for a select.\n *  @param {*} element\n *\n */\nexport async function listenToSelect(element) {\n        // Initialize the form - pass the container element and the form class name.\n        const dynamicForm = new DynamicForm(\n            element,\n            'local_wb_faq\\\\form\\\\supportmessage');\n\n        await dynamicForm.load();\n\n        const button = document.querySelector(SELECTORS.CREATETICKETBUTTON);\n        button.classList.remove('btn-primary');\n        button.classList.add('btn-outline-primary');\n\n        // If a user selects a context, redirect to a URL that includes the selected\n        // context as `contextid` query parameter\n        dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (e.detail.baseurl && e.detail.token) {\n                const url = e.detail.baseurl + \"jwtaccess?jwt=\" + e.detail.token;\n                openInNewTab(url);\n                window.location.reload();\n            } else {\n                // eslint-disable-next-line no-console\n                console.error('invalidredirect');\n                showErrorNotification();\n            }\n        });\n}\n\n/**\n * To open in new tab.\n * @param {*} href\n */\nfunction openInNewTab(href) {\n    Object.assign(document.createElement('a'), {\n      target: '_blank',\n      rel: 'noopener noreferrer',\n      href: href,\n    }).click();\n  }"],"names":["SELECTORS","listenToSelect","element","dynamicForm","DynamicForm","load","button","document","querySelector","classList","remove","add","addEventListener","events","FORM_SUBMITTED","e","preventDefault","stopPropagation","detail","baseurl","token","url","href","Object","assign","createElement","target","rel","click","window","location","reload","console","error","querySelectorAll","forEach"],"mappings":";;;;;iMAwBMA,6BACkB,kCADlBA,6BAEkB,mDAoBFC,eAAeC,eAEvBC,YAAc,IAAIC,qBACpBF,QACA,4CAEEC,YAAYE,aAEZC,OAASC,SAASC,cAAcR,8BACtCM,OAAOG,UAAUC,OAAO,eACxBJ,OAAOG,UAAUE,IAAI,uBAIrBR,YAAYS,iBAAiBT,YAAYU,OAAOC,gBAAiBC,OAE7DA,EAAEC,iBACFD,EAAEE,kBAEEF,EAAEG,OAAOC,SAAWJ,EAAEG,OAAOE,MAAO,OAC9BC,IAAMN,EAAEG,OAAOC,QAAU,iBAAmBJ,EAAEG,OAAOE,MAerDE,KAdOD,IAezBE,OAAOC,OAAOjB,SAASkB,cAAc,KAAM,CACzCC,OAAQ,SACRC,IAAK,sBACLL,KAAMA,OACLM,QAlBSC,OAAOC,SAASC,cAGhBC,QAAQC,MAAM,kEAURX,sBAjDF,KAECf,SAAS2B,iBAAiBlC,8BAElCmC,SAAQjC,UACbD,eAAeC"}