{"version":3,"sources":["../src/filter.js"],"names":["allPlayers","Array","from","document","querySelectorAll","checked","categories","init","filtercontainer","singledatacontainer","console","log","allCheckboxes","forEach","e","push","getAttribute","getChecked","prototype","call","el","addEventListener","toggleCheckbox","target","name","setVisibility","map","value","display","c","classList","intersection","length","Object","values","dataset","filter","x","includes","style"],"mappings":"mLAsBIA,CAAAA,CAAU,CAAGC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAAX,C,CACbC,CAAO,CAAG,E,CACVC,CAAU,CAAG,E,QAMG,QAAPC,CAAAA,IAAO,CAACC,CAAD,CAAkBC,CAAlB,CAA0C,CAG5DC,OAAO,CAACC,GAAR,CAAYH,CAAZ,CAA6BC,CAA7B,EACA,GAAIG,CAAAA,CAAa,CAAGT,QAAQ,CAACC,gBAAT,CAA0B,sBAA1B,CAApB,CAEAD,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAAyCS,OAAzC,CAAiD,SAAUC,CAAV,CAAa,CAC5DR,CAAU,CAACS,IAAX,CAAgBD,CAAC,CAACE,YAAF,CAAe,MAAf,CAAhB,EACAC,CAAU,CAACH,CAAC,CAACE,YAAF,CAAe,MAAf,CAAD,CACX,CAHD,EAKAf,KAAK,CAACiB,SAAN,CAAgBL,OAAhB,CAAwBM,IAAxB,CAA6BP,CAA7B,CAA4C,SAAUQ,CAAV,CAAc,CACxDA,CAAE,CAACC,gBAAH,CAAoB,QAApB,CAA8BC,CAA9B,CACD,CAFD,CAGD,C,CAOM,GAAMA,CAAAA,CAAc,CAAG,SAACR,CAAD,CAAO,CACnCG,CAAU,CAACH,CAAC,CAACS,MAAF,CAASC,IAAV,CAAV,CACAC,CAAa,EACd,CAHM,C,mBAUA,GAAMR,CAAAA,CAAU,CAAG,SAACO,CAAD,CAAU,CAClCnB,CAAO,CAACmB,CAAD,CAAP,CAAgBvB,KAAK,CAACC,IAAN,CACdC,QAAQ,CAACC,gBAAT,CAA0B,cAAgBoB,CAAhB,CAAuB,WAAjD,CADc,EAEdE,GAFc,CAEV,SAAUN,CAAV,CAAc,CAClB,MAAOA,CAAAA,CAAE,CAACO,KACX,CAJe,CAKjB,CANM,C,eAWA,GAAMF,CAAAA,CAAa,CAAG,UAAM,CAEjCf,OAAO,CAACC,GAAR,CAAYL,CAAZ,EACAN,CAAU,CAACa,OAAX,CAAmB,SAAUO,CAAV,CAAc,CAC/B,GAAIQ,CAAAA,CAAO,GAAX,CACAtB,CAAU,CAACO,OAAX,CAAmB,SAAUgB,CAAV,CAAa,CAE9BnB,OAAO,CAACC,GAAR,CAAYS,CAAE,CAACU,SAAf,EACA,GAAIC,CAAAA,CAAY,CAAG1B,CAAO,CAACwB,CAAD,CAAP,CAAWG,MAAX,CACf/B,KAAK,CAACC,IAAN,CAAW+B,MAAM,CAACC,MAAP,CAAcd,CAAE,CAACe,OAAjB,CAAX,EAAsCC,MAAtC,CAA6C,SAACC,CAAD,QAC3ChC,CAAAA,CAAO,CAACwB,CAAD,CAAP,CAAWS,QAAX,CAAoBD,CAApB,CAD2C,CAA7C,EAEEL,MAHa,GAAnB,CAKA,GAAI,CAACD,CAAL,CAAmB,CACjBH,CAAO,GAER,CACF,CAZD,EAaA,GAAIA,CAAJ,CAAa,CACXR,CAAE,CAACmB,KAAH,CAASX,OAAT,CAAmB,OACpB,CAFD,IAEO,CACLR,CAAE,CAACmB,KAAH,CAASX,OAAT,CAAmB,MACpB,CACF,CApBD,CAqBD,CAxBM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nvar allPlayers = Array.from(document.querySelectorAll(\".list-group-item\"));\nvar checked = {};\nvar categories = [];\n/**\n * Initial function\n * @param {string} filtercontainer\n * @param {string} singledatacontainer\n */\nexport const init = (filtercontainer, singledatacontainer) => {\n\n  // eslint-disable-next-line no-console\n  console.log(filtercontainer, singledatacontainer);\n  var allCheckboxes = document.querySelectorAll(\"input[type=checkbox]\");\n\n  document.querySelectorAll(\".form-group\").forEach(function (e) {\n    categories.push(e.getAttribute(\"name\"));\n    getChecked(e.getAttribute(\"name\"));\n  });\n\n  Array.prototype.forEach.call(allCheckboxes, function (el) {\n    el.addEventListener(\"change\", toggleCheckbox);\n  });\n};\n\n/**\n * Eventhandler\n *\n * @param {*} e - event\n */\nexport const toggleCheckbox = (e) => {\n  getChecked(e.target.name);\n  setVisibility();\n};\n\n/**\n * Check which Checkboxes are selected inside a group.\n *\n * @param {*} name of Element group\n */\nexport const getChecked = (name) => {\n  checked[name] = Array.from(\n    document.querySelectorAll(\"input[name=\" + name + \"]:checked\")\n  ).map(function (el) {\n    return el.value;\n  });\n};\n\n/**\n * Compares checked boxes with classes of Elements and shows or hides them.\n */\nexport const setVisibility = () => {\n  /* eslint-disable no-console */\n  console.log(categories);\n  allPlayers.forEach(function (el) {\n    let display = true;\n    categories.forEach(function (c) {\n      /* eslint-disable no-console */\n      console.log(el.classList);\n      let intersection = checked[c].length\n        ? Array.from(Object.values(el.dataset)).filter((x) =>\n            checked[c].includes(x)\n          ).length\n        : true;\n      if (!intersection) {\n        display = false;\n        return;\n      }\n    });\n    if (display) {\n      el.style.display = \"block\";\n    } else {\n      el.style.display = \"none\";\n    }\n  });\n};\n"],"file":"filter.min.js"}