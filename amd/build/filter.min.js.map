{"version":3,"file":"filter.min.js","sources":["../src/filter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_wunderbyte_table\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nvar allPlayers = Array.from(document.querySelectorAll(\".list-group-item\"));\nvar checked = {};\nvar categories = [];\n/**\n * Initial function\n */\nexport const init = () => {\n\n  var allCheckboxes = document.querySelectorAll(\"input[type=checkbox]\");\n\n  document.querySelectorAll(\".form-group\").forEach(function(e) {\n    categories.push(e.getAttribute(\"name\"));\n    getChecked(e.getAttribute(\"name\"));\n  });\n\n  Array.prototype.forEach.call(allCheckboxes, function(el) {\n    el.addEventListener(\"change\", toggleCheckbox);\n  });\n};\n\n/**\n * Eventhandler\n *\n * @param {*} e - event\n */\nexport const toggleCheckbox = (e) => {\n  getChecked(e.target.name);\n  setVisibility();\n};\n\n/**\n * Check which Checkboxes are selected inside a group.\n *\n * @param {*} name of Element group\n */\nexport const getChecked = (name) => {\n  checked[name] = Array.from(\n    document.querySelectorAll(\"input[name=\" + name + \"]:checked\")\n  ).map(function (el) {\n    return el.value;\n  });\n};\n\n/**\n * Compares checked boxes with classes of Elements and shows or hides them.\n */\nexport const setVisibility = () => {\n  allPlayers.forEach(function (el) {\n    let display = true;\n    categories.forEach(function (c) {\n      let intersection = checked[c].length\n        ? Array.from(Object.values(el.dataset)).filter((x) =>\n            checked[c].includes(x)\n          ).length\n        : true;\n      if (!intersection) {\n        display = false;\n        return;\n      }\n    });\n    if (display) {\n      el.style.display = \"block\";\n    } else {\n      el.style.display = \"none\";\n    }\n  });\n};\n"],"names":["allPlayers","Array","from","document","querySelectorAll","checked","categories","allCheckboxes","forEach","e","push","getAttribute","getChecked","prototype","call","el","addEventListener","toggleCheckbox","target","name","setVisibility","map","value","display","c","length","Object","values","dataset","filter","x","includes","style"],"mappings":";;;;;;IAsBIA,WAAaC,MAAMC,KAAKC,SAASC,iBAAiB,qBAClDC,QAAU,GACVC,WAAa,iBAIG,SAEdC,cAAgBJ,SAASC,iBAAiB,wBAE9CD,SAASC,iBAAiB,eAAeI,SAAQ,SAASC,GACxDH,WAAWI,KAAKD,EAAEE,aAAa,SAC/BC,WAAWH,EAAEE,aAAa,YAG5BV,MAAMY,UAAUL,QAAQM,KAAKP,eAAe,SAASQ,IACnDA,GAAGC,iBAAiB,SAAUC,0BASrBA,eAAkBR,IAC7BG,WAAWH,EAAES,OAAOC,MACpBC,8DAQWR,WAAcO,OACzBd,QAAQc,MAAQlB,MAAMC,KACpBC,SAASC,iBAAiB,cAAgBe,KAAO,cACjDE,KAAI,SAAUN,WACPA,GAAGO,+CAODF,cAAgB,KAC3BpB,WAAWQ,SAAQ,SAAUO,QACvBQ,SAAU,EACdjB,WAAWE,SAAQ,SAAUgB,IACRnB,QAAQmB,GAAGC,QAC1BxB,MAAMC,KAAKwB,OAAOC,OAAOZ,GAAGa,UAAUC,QAAQC,GAC5CzB,QAAQmB,GAAGO,SAASD,KACpBL,SAGJF,SAAU,MAKZR,GAAGiB,MAAMT,QADPA,QACiB,QAEA"}